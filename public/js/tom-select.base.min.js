(self["webpackChunk"] = self["webpackChunk"] || []).push([["/js/tom-select.base.min"],{

/***/ "./resources/libs/tom-select/dist/js/tom-select.base.min.js":
/*!******************************************************************!*\
  !*** ./resources/libs/tom-select/dist/js/tom-select.base.min.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e26) { throw _e26; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e27) { didErr = true; err = _e27; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
* Tom Select v1.7.8
* Licensed under the Apache License, Version 2.0 (the "License");
*/
!function (e, t) {
  "object" == ( false ? 0 : _typeof(exports)) && "undefined" != "object" ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(this, function () {
  "use strict";

  function e(e, t) {
    e.split(/\s+/).forEach(function (e) {
      t(e);
    });
  }

  var t = /*#__PURE__*/function () {
    function t() {
      _classCallCheck(this, t);

      this._events = {};
    }

    _createClass(t, [{
      key: "on",
      value: function on(_t, i) {
        var _this = this;

        e(_t, function (e) {
          _this._events[e] = _this._events[e] || [], _this._events[e].push(i);
        });
      }
    }, {
      key: "off",
      value: function off(_t2, i) {
        var _this2 = this;

        var s = arguments.length;
        0 !== s ? e(_t2, function (e) {
          if (1 === s) return delete _this2._events[e];
          e in _this2._events != !1 && _this2._events[e].splice(_this2._events[e].indexOf(i), 1);
        }) : this._events = {};
      }
    }, {
      key: "trigger",
      value: function trigger(_t3) {
        for (var _len = arguments.length, i = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          i[_key - 1] = arguments[_key];
        }

        var s = this;
        e(_t3, function (e) {
          if (e in s._events != !1) {
            var _iterator = _createForOfIteratorHelper(s._events[e]),
                _step;

            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var _t5 = _step.value;

                _t5.apply(s, i);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        });
      }
    }]);

    return t;
  }();

  var i;
  var s = "[̀-ͯ·ʾ]",
      n = new RegExp(s, "g");
  var o;

  var r = {
    "æ": "ae",
    "ⱥ": "a",
    "ø": "o"
  },
      l = new RegExp(Object.keys(r).join("|"), "g"),
      a = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]],
      c = function c(e) {
    return e.normalize("NFKD").replace(n, "").toLowerCase().replace(l, function (e) {
      return r[e];
    });
  },
      d = function d(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "|";
    return e.length > 1 ? "(?:" + e.join(t) + ")" : e[0];
  },
      p = function p(e) {
    if (1 === e.length) return [[e]];
    var t = [];
    return p(e.substring(1)).forEach(function (i) {
      var s = i.slice(0);
      s[0] = e.charAt(0) + s[0], t.push(s), (s = i.slice(0)).unshift(e.charAt(0)), t.push(s);
    }), t;
  },
      u = function u(e) {
    void 0 === o && (o = function () {
      var e = {};
      a.forEach(function (t) {
        for (var _i = t[0]; _i <= t[1]; _i++) {
          var _t6 = String.fromCharCode(_i),
              _s = c(_t6);

          _s != _t6.toLowerCase() && (_s in e || (e[_s] = [_s]), e[_s].push(_t6));
        }
      });
      var t = Object.keys(e);
      t = t.sort(function (e, t) {
        return t.length - e.length;
      }), i = new RegExp("(" + d(t) + "[̀-ͯ·ʾ]*)", "g");
      var s = {};
      return t.sort(function (e, t) {
        return e.length - t.length;
      }).forEach(function (t) {
        var i = p(t).map(function (t) {
          return t = t.map(function (t) {
            return e.hasOwnProperty(t) ? d(e[t]) : t;
          }), d(t, "");
        });
        s[t] = d(i);
      }), s;
    }());
    return e.normalize("NFKD").toLowerCase().split(i).map(function (e) {
      if ("" == e) return "";
      var t = c(e);
      if (o.hasOwnProperty(t)) return o[t];
      var i = e.normalize("NFC");
      return i != e ? d([e, i]) : e;
    }).join("");
  },
      h = function h(e, t) {
    if (e) return e[t];
  },
      g = function g(e, t) {
    if (e) {
      for (var i, s = t.split("."); (i = s.shift()) && (e = e[i]);) {
        ;
      }

      return e;
    }
  },
      m = function m(e, t, i) {
    var s, n;
    return e ? -1 === (n = (e += "").search(t.regex)) ? 0 : (s = t.string.length / e.length, 0 === n && (s += .5), s * i) : 0;
  },
      f = function f(e) {
    return (e + "").replace(/([\$\(-\+\.\?\[-\^\{-\}])/g, "\\$1");
  },
      v = function v(e, t) {
    var i = e[t];
    i && !Array.isArray(i) && (e[t] = [i]);
  },
      y = function y(e, t) {
    if (Array.isArray(e)) e.forEach(t);else for (var i in e) {
      e.hasOwnProperty(i) && t(e[i], i);
    }
  },
      O = function O(e, t) {
    return "number" == typeof e && "number" == typeof t ? e > t ? 1 : e < t ? -1 : 0 : (e = c(e + "").toLowerCase()) > (t = c(t + "").toLowerCase()) ? 1 : t > e ? -1 : 0;
  };

  var b = /*#__PURE__*/function () {
    function b(e, t) {
      _classCallCheck(this, b);

      this.items = e, this.settings = t || {
        diacritics: !0
      };
    }

    _createClass(b, [{
      key: "tokenize",
      value: function tokenize(e, t, i) {
        var _this3 = this;

        if (!e || !e.length) return [];
        var s = [],
            n = e.split(/\s+/);
        var o;
        return i && (o = new RegExp("^(" + Object.keys(i).map(f).join("|") + "):(.*)$")), n.forEach(function (e) {
          var i,
              n = null,
              r = null;
          o && (i = e.match(o)) && (n = i[1], e = i[2]), e.length > 0 && (r = f(e), _this3.settings.diacritics && (r = u(r)), t && (r = "\\b" + r)), s.push({
            string: e,
            regex: r ? new RegExp(r, "iu") : null,
            field: n
          });
        }), s;
      }
    }, {
      key: "getScoreFunction",
      value: function getScoreFunction(e, t) {
        var i = this.prepareSearch(e, t);
        return this._getScoreFunction(i);
      }
    }, {
      key: "_getScoreFunction",
      value: function _getScoreFunction(e) {
        var t = e.tokens,
            i = t.length;
        if (!i) return function () {
          return 0;
        };
        var s = e.options.fields,
            n = e.weights,
            o = s.length,
            r = e.getAttrFn;
        if (!o) return function () {
          return 1;
        };
        var l = 1 === o ? function (e, t) {
          var i = s[0].field;
          return m(r(t, i), e, n[i]);
        } : function (e, t) {
          var i = 0;

          if (e.field) {
            var _s2 = r(t, e.field);

            !e.regex && _s2 ? i += 1 / o : i += m(_s2, e, 1);
          } else y(n, function (s, n) {
            i += m(r(t, n), e, s);
          });

          return i / o;
        };
        return 1 === i ? function (e) {
          return l(t[0], e);
        } : "and" === e.options.conjunction ? function (e) {
          for (var s, n = 0, o = 0; n < i; n++) {
            if ((s = l(t[n], e)) <= 0) return 0;
            o += s;
          }

          return o / i;
        } : function (e) {
          var s = 0;
          return y(t, function (t) {
            s += l(t, e);
          }), s / i;
        };
      }
    }, {
      key: "getSortFunction",
      value: function getSortFunction(e, t) {
        var i = this.prepareSearch(e, t);
        return this._getSortFunction(i);
      }
    }, {
      key: "_getSortFunction",
      value: function _getSortFunction(e) {
        var t, i, s;

        var n = this,
            o = e.options,
            r = !e.query && o.sort_empty ? o.sort_empty : o.sort,
            l = [],
            a = [],
            c = function c(t, i) {
          return "$score" === t ? i.score : e.getAttrFn(n.items[i.id], t);
        };

        if (r) for (t = 0, i = r.length; t < i; t++) {
          (e.query || "$score" !== r[t].field) && l.push(r[t]);
        }

        if (e.query) {
          for (s = !0, t = 0, i = l.length; t < i; t++) {
            if ("$score" === l[t].field) {
              s = !1;
              break;
            }
          }

          s && l.unshift({
            field: "$score",
            direction: "desc"
          });
        } else for (t = 0, i = l.length; t < i; t++) {
          if ("$score" === l[t].field) {
            l.splice(t, 1);
            break;
          }
        }

        for (t = 0, i = l.length; t < i; t++) {
          a.push("desc" === l[t].direction ? -1 : 1);
        }

        var d = l.length;

        if (d) {
          if (1 === d) {
            var _e = l[0].field,
                _t7 = a[0];
            return function (i, s) {
              return _t7 * O(c(_e, i), c(_e, s));
            };
          }

          return function (e, t) {
            var i, s, n;

            for (i = 0; i < d; i++) {
              if (n = l[i].field, s = a[i] * O(c(n, e), c(n, t))) return s;
            }

            return 0;
          };
        }

        return null;
      }
    }, {
      key: "prepareSearch",
      value: function prepareSearch(e, t) {
        var i = {};
        var s = Object.assign({}, t);

        if (v(s, "sort"), v(s, "sort_empty"), s.fields) {
          v(s, "fields");
          var _e2 = [];
          s.fields.forEach(function (t) {
            "string" == typeof t && (t = {
              field: t,
              weight: 1
            }), _e2.push(t), i[t.field] = "weight" in t ? t.weight : 1;
          }), s.fields = _e2;
        }

        return {
          options: s,
          query: e.toLowerCase().trim(),
          tokens: this.tokenize(e, s.respect_word_boundaries, i),
          total: 0,
          items: [],
          weights: i,
          getAttrFn: s.nesting ? g : h
        };
      }
    }, {
      key: "search",
      value: function search(e, t) {
        var i,
            s,
            n = this;
        s = this.prepareSearch(e, t), t = s.options, e = s.query;

        var o = t.score || n._getScoreFunction(s);

        e.length ? y(n.items, function (e, n) {
          i = o(e), (!1 === t.filter || i > 0) && s.items.push({
            score: i,
            id: n
          });
        }) : y(n.items, function (e, t) {
          s.items.push({
            score: 1,
            id: t
          });
        });

        var r = n._getSortFunction(s);

        return r && s.items.sort(r), s.total = s.items.length, "number" == typeof t.limit && (s.items = s.items.slice(0, t.limit)), s;
      }
    }]);

    return b;
  }();

  var w = function w(e) {
    if (e.jquery) return e[0];
    if (e instanceof HTMLElement) return e;

    if (e.indexOf("<") > -1) {
      var _t8 = document.createElement("div");

      return _t8.innerHTML = e.trim(), _t8.firstChild;
    }

    return document.querySelector(e);
  },
      I = function I(e, t) {
    var i = document.createEvent("HTMLEvents");
    i.initEvent(t, !0, !1), e.dispatchEvent(i);
  },
      C = function C(e, t) {
    Object.assign(e.style, t);
  },
      A = function A(e) {
    for (var _len2 = arguments.length, t = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      t[_key2 - 1] = arguments[_key2];
    }

    var i = S(t);
    (e = F(e)).map(function (e) {
      i.map(function (t) {
        e.classList.add(t);
      });
    });
  },
      _ = function _(e) {
    for (var _len3 = arguments.length, t = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      t[_key3 - 1] = arguments[_key3];
    }

    var i = S(t);
    (e = F(e)).map(function (e) {
      i.map(function (t) {
        e.classList.remove(t);
      });
    });
  },
      S = function S(e) {
    var t = [];

    var _iterator2 = _createForOfIteratorHelper(e),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _i2 = _step2.value;
        "string" == typeof _i2 && (_i2 = _i2.trim().split(/[\11\12\14\15\40]/)), Array.isArray(_i2) && (t = t.concat(_i2));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    return t.filter(Boolean);
  },
      F = function F(e) {
    return Array.isArray(e) || (e = [e]), e;
  },
      x = function x(e, t, i) {
    if (!i || i.contains(e)) for (; e && e.matches;) {
      if (e.matches(t)) return e;
      e = e.parentNode;
    }
  },
      k = function k(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return t > 0 ? e[e.length - 1] : e[0];
  },
      P = function P(e, t) {
    if (!e) return -1;
    t = t || e.nodeName;

    for (var i = 0; e = e.previousElementSibling;) {
      e.matches(t) && i++;
    }

    return i;
  },
      L = function L(e, t) {
    for (var _i3 in t) {
      var _s3 = t[_i3];
      null == _s3 ? e.removeAttribute(_i3) : e.setAttribute(_i3, "" + _s3);
    }
  },
      E = function E(e, t) {
    e.parentNode && e.parentNode.replaceChild(t, e);
  },
      T = function T(e, t) {
    if (null === t) return;

    if ("string" == typeof t) {
      if (!t.length) return;
      t = new RegExp(t, "i");
    }

    var i = function i(e) {
      return 3 === e.nodeType ? function (e) {
        var i = e.data.match(t);

        if (i && e.data.length > 0) {
          var s = document.createElement("span");
          s.className = "highlight";
          var n = e.splitText(i.index);
          n.splitText(i[0].length);
          var o = n.cloneNode(!0);
          return s.appendChild(o), E(n, s), 1;
        }

        return 0;
      }(e) : (function (e) {
        if (1 === e.nodeType && e.childNodes && !/(script|style)/i.test(e.tagName) && ("highlight" !== e.className || "SPAN" !== e.tagName)) for (var t = 0; t < e.childNodes.length; ++t) {
          t += i(e.childNodes[t]);
        }
      }(e), 0);
    };

    i(e);
  },
      q = "undefined" != typeof navigator && /Mac/.test(navigator.userAgent) ? "metaKey" : "ctrlKey";

  var V = {
    options: [],
    optgroups: [],
    plugins: [],
    delimiter: ",",
    splitOn: null,
    persist: !0,
    diacritics: !0,
    create: null,
    createOnBlur: !1,
    createFilter: null,
    highlight: !0,
    openOnFocus: !0,
    shouldOpen: null,
    maxOptions: 50,
    maxItems: null,
    hideSelected: null,
    duplicates: !1,
    addPrecedence: !1,
    selectOnTab: !1,
    preload: null,
    allowEmptyOption: !1,
    closeAfterSelect: !1,
    loadThrottle: 300,
    loadingClass: "loading",
    dataAttr: null,
    optgroupField: "optgroup",
    valueField: "value",
    labelField: "text",
    disabledField: "disabled",
    optgroupLabelField: "label",
    optgroupValueField: "value",
    lockOptgroupOrder: !1,
    sortField: "$order",
    searchField: ["text"],
    searchConjunction: "and",
    mode: null,
    wrapperClass: "ts-control",
    inputClass: "ts-input",
    dropdownClass: "ts-dropdown",
    dropdownContentClass: "ts-dropdown-content",
    itemClass: "item",
    optionClass: "option",
    dropdownParent: null,
    controlInput: null,
    copyClassesToDropdown: !0,
    placeholder: null,
    hidePlaceholder: null,
    shouldLoad: function shouldLoad(e) {
      return e.length > 0;
    },
    render: {}
  };

  var j = function j(e) {
    return null == e ? null : $(e);
  },
      $ = function $(e) {
    return "boolean" == typeof e ? e ? "1" : "0" : e + "";
  },
      D = function D(e) {
    return (e + "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
  },
      N = function N(e, t) {
    var i;
    return function (s, n) {
      var o = this;
      i && (o.loading = Math.max(o.loading - 1, 0), clearTimeout(i)), i = setTimeout(function () {
        i = null, o.loadedSearches[s] = !0, e.call(o, s, n);
      }, t);
    };
  },
      R = function R(e, t, i) {
    var s,
        n = e.trigger,
        o = {};

    for (s in e.trigger = function () {
      var i = arguments[0];
      if (-1 === t.indexOf(i)) return n.apply(e, arguments);
      o[i] = arguments;
    }, i.apply(e, []), e.trigger = n, o) {
      n.apply(e, o[s]);
    }
  },
      H = function H(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
    e && (e.preventDefault(), t && e.stopPropagation());
  },
      z = function z(e, t, i, s) {
    e.addEventListener(t, i, s);
  },
      K = function K(e, t) {
    return !!t && !!t[e] && 1 === (t.altKey ? 1 : 0) + (t.ctrlKey ? 1 : 0) + (t.shiftKey ? 1 : 0) + (t.metaKey ? 1 : 0);
  },
      M = function M(e, t) {
    var i = e.getAttribute("id");
    return i || (e.setAttribute("id", t), t);
  },
      B = function B(e) {
    return e.replace(/[\\"']/g, "\\$&");
  },
      Q = function Q(e, t) {
    t && e.append(t);
  };

  var G = 0;

  var U = /*#__PURE__*/function (_ref) {
    _inherits(U, _ref);

    var _super = _createSuper(U);

    function U(e, t) {
      var _this4;

      _classCallCheck(this, U);

      var i;
      _this4 = _super.call(this), _this4.order = 0, _this4.tab_key = !1, _this4.isOpen = !1, _this4.isDisabled = !1, _this4.isInvalid = !1, _this4.isLocked = !1, _this4.isFocused = !1, _this4.isInputHidden = !1, _this4.isSetup = !1, _this4.ignoreFocus = !1, _this4.hasOptions = !1, _this4.lastValue = "", _this4.caretPos = 0, _this4.loading = 0, _this4.loadedSearches = {}, _this4.activeOption = null, _this4.activeItems = [], _this4.optgroups = {}, _this4.options = {}, _this4.userOptions = {}, _this4.items = [], _this4.renderCache = {
        item: {},
        option: {}
      }, G++;

      var s = w(e),
          n = _assertThisInitialized(_this4);

      if (s.tomselect) throw new Error("Tom Select already initialized on this element");
      s.tomselect = _assertThisInitialized(_this4), i = (window.getComputedStyle && window.getComputedStyle(s, null)).getPropertyValue("direction"), _this4.settings = function (e, t) {
        var i = Object.assign({}, V, t),
            s = i.dataAttr,
            n = i.labelField,
            o = i.valueField,
            r = i.disabledField,
            l = i.optgroupField,
            a = i.optgroupLabelField,
            c = i.optgroupValueField,
            d = e.tagName.toLowerCase(),
            p = e.getAttribute("placeholder") || e.getAttribute("data-placeholder");

        if (!p && !i.allowEmptyOption) {
          var _t9 = e.querySelector('option[value=""]');

          _t9 && (p = _t9.textContent);
        }

        var u = {
          placeholder: p,
          options: [],
          optgroups: [],
          items: [],
          maxItems: null
        };
        return "select" === d ? function () {
          var t,
              d = u.options,
              p = {},
              h = 1,
              g = function g(e) {
            var t = Object.assign({}, e.dataset),
                i = s && t[s];
            return "string" == typeof i && i.length && (t = Object.assign(t, JSON.parse(i))), t;
          },
              m = function m(e, t) {
            var s = j(e.value);

            if (null != s && (s || i.allowEmptyOption)) {
              if (p.hasOwnProperty(s)) {
                if (t) {
                  var a = p[s][l];
                  a ? Array.isArray(a) ? a.push(t) : p[s][l] = [a, t] : p[s][l] = t;
                }
              } else {
                var c = g(e);
                c[n] = c[n] || e.textContent, c[o] = c[o] || s, c[r] = c[r] || e.disabled, c[l] = c[l] || t, c.$option = e, p[s] = c, d.push(c);
              }

              e.selected && u.items.push(s);
            }
          },
              f = function f(e) {
            var t, i;
            (i = g(e))[a] = i[a] || e.getAttribute("label") || "", i[c] = i[c] || h++, i[r] = i[r] || e.disabled, u.optgroups.push(i), t = i[c];

            var _iterator3 = _createForOfIteratorHelper(e.children),
                _step3;

            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var _i4 = _step3.value;
                m(_i4, t);
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          };

          u.maxItems = e.hasAttribute("multiple") ? null : 1;

          var _iterator4 = _createForOfIteratorHelper(e.children),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var _i5 = _step4.value;
              "optgroup" === (t = _i5.tagName.toLowerCase()) ? f(_i5) : "option" === t && m(_i5);
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }() : function () {
          var t = e.getAttribute(s);

          if (t) {
            u.options = JSON.parse(t);

            var _iterator5 = _createForOfIteratorHelper(u.options),
                _step5;

            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                var _e3 = _step5.value;
                u.items.push(_e3[o]);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
          } else {
            var r = e.value.trim() || "";
            if (!i.allowEmptyOption && !r.length) return;

            var _t10 = r.split(i.delimiter);

            var _iterator6 = _createForOfIteratorHelper(_t10),
                _step6;

            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var _e4 = _step6.value;
                var _t11 = {};
                _t11[n] = _e4, _t11[o] = _e4, u.options.push(_t11);
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }

            u.items = _t10;
          }
        }(), Object.assign({}, V, u, t);
      }(s, t), _this4.input = s, _this4.tabIndex = s.tabIndex || 0, _this4.is_select_tag = "select" === s.tagName.toLowerCase(), _this4.rtl = /rtl/i.test(i), _this4.inputId = M(s, "tomselect-" + G), _this4.isRequired = s.required, _this4.sifter = new b(_this4.options, {
        diacritics: _this4.settings.diacritics
      }), _this4.setupOptions(_this4.settings.options, _this4.settings.optgroups), delete _this4.settings.optgroups, delete _this4.settings.options, _this4.settings.mode = _this4.settings.mode || (1 === _this4.settings.maxItems ? "single" : "multi"), "boolean" != typeof _this4.settings.hideSelected && (_this4.settings.hideSelected = "multi" === _this4.settings.mode), "boolean" != typeof _this4.settings.hidePlaceholder && (_this4.settings.hidePlaceholder = "multi" !== _this4.settings.mode);
      var o = _this4.settings.createFilter;
      "function" != typeof o && ("string" == typeof o && (o = new RegExp(o)), o instanceof RegExp ? _this4.settings.createFilter = function (e) {
        return o.test(e);
      } : _this4.settings.createFilter = function () {
        return !0;
      }), _this4.initializePlugins(_this4.settings.plugins), _this4.setupCallbacks(), _this4.setupTemplates();
      var r, l, a, c, d, p, u, h, g;
      t = n.settings, s = n.input;
      var m = {
        passive: !0
      },
          v = n.inputId + "-ts-dropdown";
      if (p = n.settings.mode, u = s.getAttribute("class") || "", r = w("<div>"), A(r, t.wrapperClass, u, p), l = w('<div class="items">'), A(l, t.inputClass), Q(r, l), c = n._render("dropdown"), A(c, t.dropdownClass, p), d = w("<div role=\"listbox\" id=\"".concat(v, "\" tabindex=\"-1\">")), A(d, t.dropdownContentClass), Q(c, d), w(t.dropdownParent || r).appendChild(c), t.controlInput) a = w(t.controlInput);else {
        a = w('<input type="text" autocomplete="off" size="1" />');

        for (var _i6 = 0, _arr = ["autocorrect", "autocapitalize", "autocomplete"]; _i6 < _arr.length; _i6++) {
          var _e5 = _arr[_i6];
          s.getAttribute(_e5) && L(a, _defineProperty({}, _e5, s.getAttribute(_e5)));
        }
      }
      t.controlInput || (a.tabIndex = s.disabled ? -1 : n.tabIndex, l.appendChild(a)), L(a, {
        role: "combobox",
        haspopup: "listbox",
        "aria-expanded": "false",
        "aria-controls": v
      }), g = M(a, n.inputId + "-tomselected");

      var y = "label[for='" + function (e) {
        return e.replace(/['"\\]/g, "\\$&");
      }(n.inputId) + "']",
          O = document.querySelector(y);

      if (O) {
        L(O, {
          "for": g
        });

        var _e6 = M(O, n.inputId + "-ts-label");

        L(d, {
          "aria-labelledby": _e6
        });
      }

      n.settings.copyClassesToDropdown && A(c, u), r.style.width = s.style.width, n.plugins.names.length && (h = "plugin-" + n.plugins.names.join(" plugin-"), A([r, c], h)), (null === t.maxItems || t.maxItems > 1) && n.is_select_tag && L(s, {
        multiple: "multiple"
      }), n.settings.placeholder && L(a, {
        placeholder: t.placeholder
      }), !n.settings.splitOn && n.settings.delimiter && (n.settings.splitOn = new RegExp("\\s*" + f(n.settings.delimiter) + "+\\s*")), _this4.settings.load && _this4.settings.loadThrottle && (_this4.settings.load = N(_this4.settings.load, _this4.settings.loadThrottle)), _this4.control = l, _this4.control_input = a, _this4.wrapper = r, _this4.dropdown = c, _this4.dropdown_content = d, n.control_input.type = s.type, z(c, "click", function (e) {
        var t = x(e.target, "[data-selectable]");
        t && (n.onOptionSelect(e, t), H(e, !0));
      }), z(l, "click", function (e) {
        var t = x(e.target, "." + n.settings.itemClass, l);
        t && n.onItemSelect(e, t) ? H(e, !0) : "" == a.value && (n.onClick(), H(e, !0));
      }), z(a, "mousedown", function (e) {
        "" !== a.value && e.stopPropagation();
      }), z(a, "keydown", function (e) {
        return n.onKeyDown(e);
      }), z(a, "keyup", function (e) {
        return n.onKeyUp(e);
      }), z(a, "keypress", function (e) {
        return n.onKeyPress(e);
      }), z(a, "resize", function () {
        return n.positionDropdown();
      }, m), z(a, "blur", function () {
        return n.onBlur();
      }), z(a, "focus", function (e) {
        return n.onFocus(e);
      }), z(a, "paste", function (e) {
        return n.onPaste(e);
      });

      var I = function I(e) {
        var t = e.composedPath()[0];
        if (!r.contains(t) && !c.contains(t)) return n.isFocused && n.blur(), void n.inputState();
        H(e, !0);
      };

      var C = function C() {
        n.isOpen && n.positionDropdown();
      };

      z(document, "mousedown", I), z(window, "sroll", C, m), z(window, "resize", C, m), _this4._destroy = function () {
        document.removeEventListener("mousedown", I), window.removeEventListener("sroll", C), window.removeEventListener("resize", C);
      }, _this4.revertSettings = {
        innerHTML: s.innerHTML,
        tabIndex: s.tabIndex
      }, s.tabIndex = -1, L(s, {
        hidden: "hidden"
      }), s.insertAdjacentElement("afterend", n.wrapper), n.setValue(t.items), t.items = [], z(s, "invalid", function (e) {
        H(e), n.isInvalid || (n.isInvalid = !0, n.refreshState());
      }), n.updateOriginalInput(), n.refreshItems(), n.close(!1), n.inputState(), n.isSetup = !0, s.disabled && n.disable(), n.on("change", _this4.onChange), A(s, "tomselected"), n.trigger("initialize"), !0 === t.preload && n.load(""), n.setup();
      return _this4;
    }

    _createClass(U, [{
      key: "setup",
      value: function setup() {}
    }, {
      key: "setupOptions",
      value: function setupOptions() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        var _iterator7 = _createForOfIteratorHelper(e),
            _step7;

        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
            var _t12 = _step7.value;
            this.registerOption(_t12);
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }

        var _iterator8 = _createForOfIteratorHelper(t),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var _e7 = _step8.value;
            this.registerOptionGroup(_e7);
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }
    }, {
      key: "setupTemplates",
      value: function setupTemplates() {
        var e = this,
            t = e.settings.labelField,
            i = e.settings.optgroupLabelField,
            s = {
          optgroup: function optgroup(e) {
            var t = document.createElement("div");
            return t.className = "optgroup", t.appendChild(e.options), t;
          },
          optgroup_header: function optgroup_header(e, t) {
            return '<div class="optgroup-header">' + t(e[i]) + "</div>";
          },
          option: function option(e, i) {
            return "<div>" + i(e[t]) + "</div>";
          },
          item: function item(e, i) {
            return "<div>" + i(e[t]) + "</div>";
          },
          option_create: function option_create(e, t) {
            return '<div class="create">Add <strong>' + t(e.input) + "</strong>&hellip;</div>";
          },
          no_results: function no_results() {
            return '<div class="no-results">No results found</div>';
          },
          loading: function loading() {
            return '<div class="spinner"></div>';
          },
          not_loading: function not_loading() {},
          dropdown: function dropdown() {
            return "<div></div>";
          }
        };
        e.settings.render = Object.assign({}, s, e.settings.render);
      }
    }, {
      key: "setupCallbacks",
      value: function setupCallbacks() {
        var e,
            t,
            i = {
          initialize: "onInitialize",
          change: "onChange",
          item_add: "onItemAdd",
          item_remove: "onItemRemove",
          item_select: "onItemSelect",
          clear: "onClear",
          option_add: "onOptionAdd",
          option_remove: "onOptionRemove",
          option_clear: "onOptionClear",
          optgroup_add: "onOptionGroupAdd",
          optgroup_remove: "onOptionGroupRemove",
          optgroup_clear: "onOptionGroupClear",
          dropdown_open: "onDropdownOpen",
          dropdown_close: "onDropdownClose",
          type: "onType",
          load: "onLoad",
          focus: "onFocus",
          blur: "onBlur"
        };

        for (e in i) {
          (t = this.settings[i[e]]) && this.on(e, t);
        }
      }
    }, {
      key: "onClick",
      value: function onClick() {
        var e = this;
        if (e.activeItems.length > 0) return e.clearActiveItems(), void e.focus();
        e.isFocused && e.isOpen ? e.blur() : e.focus();
      }
    }, {
      key: "onMouseDown",
      value: function onMouseDown() {}
    }, {
      key: "onChange",
      value: function onChange() {
        I(this.input, "input"), I(this.input, "change");
      }
    }, {
      key: "onPaste",
      value: function onPaste(e) {
        var t = this;
        t.isFull() || t.isInputHidden || t.isLocked ? H(e) : t.settings.splitOn && setTimeout(function () {
          var e = t.inputValue();

          if (e.match(t.settings.splitOn)) {
            var i = e.trim().split(t.settings.splitOn);

            var _iterator9 = _createForOfIteratorHelper(i),
                _step9;

            try {
              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                var _e8 = _step9.value;
                t.createItem(_e8);
              }
            } catch (err) {
              _iterator9.e(err);
            } finally {
              _iterator9.f();
            }
          }
        }, 0);
      }
    }, {
      key: "onKeyPress",
      value: function onKeyPress(e) {
        var t = this;

        if (!t.isLocked) {
          var i = String.fromCharCode(e.keyCode || e.which);
          return t.settings.create && "multi" === t.settings.mode && i === t.settings.delimiter ? (t.createItem(), void H(e)) : void 0;
        }

        H(e);
      }
    }, {
      key: "onKeyDown",
      value: function onKeyDown(e) {
        var t = this;
        if (t.isLocked) 9 !== e.keyCode && H(e);else {
          switch (e.keyCode) {
            case 65:
              if (K(q, e)) return void t.selectAll();
              break;

            case 27:
              return t.isOpen && (H(e, !0), t.close()), void t.clearActiveItems();

            case 40:
              if (!t.isOpen && t.hasOptions) t.open();else if (t.activeOption) {
                var _e9 = t.getAdjacent(t.activeOption, 1);

                _e9 && t.setActiveOption(_e9);
              }
              return void H(e);

            case 38:
              if (t.activeOption) {
                var _e10 = t.getAdjacent(t.activeOption, -1);

                _e10 && t.setActiveOption(_e10);
              }

              return void H(e);

            case 13:
              return void (t.isOpen && t.activeOption ? (t.onOptionSelect(e, t.activeOption), H(e)) : t.settings.create && t.createItem() && H(e));

            case 37:
              return void t.advanceSelection(-1, e);

            case 39:
              return void t.advanceSelection(1, e);

            case 9:
              return void (t.settings.selectOnTab && (t.isOpen && t.activeOption && (t.tab_key = !0, t.onOptionSelect(e, t.activeOption), H(e), t.tab_key = !1), t.settings.create && t.createItem() && H(e)));

            case 8:
            case 46:
              return void t.deleteSelection(e);
          }

          t.isInputHidden && !K(q, e) && H(e);
        }
      }
    }, {
      key: "onKeyUp",
      value: function onKeyUp(e) {
        var t = this;
        if (t.isLocked) H(e);else {
          var i = t.inputValue();
          t.lastValue !== i && (t.lastValue = i, t.settings.shouldLoad.call(t, i) && t.load(i), t.refreshOptions(), t.trigger("type", i));
        }
      }
    }, {
      key: "onFocus",
      value: function onFocus(e) {
        var t = this,
            i = t.isFocused;
        if (t.isDisabled) return t.blur(), void H(e);
        t.ignoreFocus || (t.isFocused = !0, "focus" === t.settings.preload && t.load(""), i || t.trigger("focus"), t.activeItems.length || (t.showInput(), t.refreshOptions(!!t.settings.openOnFocus)), t.refreshState());
      }
    }, {
      key: "onBlur",
      value: function onBlur() {
        var e = this;

        if (e.isFocused) {
          e.isFocused = !1, e.ignoreFocus = !1;

          var t = function t() {
            e.close(), e.setActiveItem(), e.setCaret(e.items.length), e.trigger("blur");
          };

          e.settings.create && e.settings.createOnBlur ? e.createItem(null, !1, t) : t();
        }
      }
    }, {
      key: "onOptionSelect",
      value: function onOptionSelect(e, t) {
        var i,
            s = this;
        t && (t.parentElement && t.parentElement.matches("[data-disabled]") || (t.classList.contains("create") ? s.createItem(null, !0, function () {
          s.settings.closeAfterSelect && s.close();
        }) : void 0 !== (i = t.dataset.value) && (s.lastQuery = null, s.addItem(i), s.settings.closeAfterSelect && s.close(), !s.settings.hideSelected && e.type && /click/.test(e.type) && s.setActiveOption(t))));
      }
    }, {
      key: "onItemSelect",
      value: function onItemSelect(e, t) {
        var i = this;
        return !i.isLocked && "multi" === i.settings.mode && (H(e), i.setActiveItem(t, e), !0);
      }
    }, {
      key: "canLoad",
      value: function canLoad(e) {
        return !!this.settings.load && !this.loadedSearches.hasOwnProperty(e);
      }
    }, {
      key: "load",
      value: function load(e) {
        var t = this;
        if (!t.canLoad(e)) return;
        A(t.wrapper, t.settings.loadingClass), t.loading++;
        var i = t.loadCallback.bind(t);
        t.settings.load.call(t, e, i);
      }
    }, {
      key: "loadCallback",
      value: function loadCallback(e, t) {
        var i = this;
        i.loading = Math.max(i.loading - 1, 0), i.lastQuery = null, i.clearActiveOption(), i.setupOptions(e, t), i.refreshOptions(i.isFocused && !i.isInputHidden), i.loading || _(i.wrapper, i.settings.loadingClass), i.trigger("load", e, t);
      }
    }, {
      key: "setTextboxValue",
      value: function setTextboxValue() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        var t = this.control_input;
        t.value !== e && (t.value = e, I(t, "update"), this.lastValue = e);
      }
    }, {
      key: "getValue",
      value: function getValue() {
        return this.is_select_tag && this.input.hasAttribute("multiple") ? this.items : this.items.join(this.settings.delimiter);
      }
    }, {
      key: "setValue",
      value: function setValue(e, t) {
        var _this5 = this;

        R(this, t ? [] : ["change"], function () {
          _this5.clear(t), _this5.addItems(e, t);
        });
      }
    }, {
      key: "setMaxItems",
      value: function setMaxItems(e) {
        0 === e && (e = null), this.settings.maxItems = e, this.refreshState();
      }
    }, {
      key: "setActiveItem",
      value: function setActiveItem(e, t) {
        var i,
            s,
            n,
            o,
            r,
            l,
            a = this;

        if ("single" !== a.settings.mode) {
          if (!e) return a.clearActiveItems(), void (a.isFocused && a.showInput());

          if ("click" === (i = t && t.type.toLowerCase()) && K("shiftKey", t) && a.activeItems.length) {
            for (l = a.getLastActive(), (n = Array.prototype.indexOf.call(a.control.children, l)) > (o = Array.prototype.indexOf.call(a.control.children, e)) && (r = n, n = o, o = r), s = n; s <= o; s++) {
              e = a.control.children[s], -1 === a.activeItems.indexOf(e) && a.setActiveItemClass(e);
            }

            H(t);
          } else "click" === i && K(q, t) || "keydown" === i && K("shiftKey", t) ? e.classList.contains("active") ? a.removeActiveItem(e) : a.setActiveItemClass(e) : (a.clearActiveItems(), a.setActiveItemClass(e));

          a.hideInput(), a.isFocused || a.focus();
        }
      }
    }, {
      key: "setActiveItemClass",
      value: function setActiveItemClass(e) {
        var t = this,
            i = t.control.querySelector(".last-active");
        i && _(i, "last-active"), A(e, "active last-active"), t.trigger("item_select", e), -1 == t.activeItems.indexOf(e) && t.activeItems.push(e);
      }
    }, {
      key: "removeActiveItem",
      value: function removeActiveItem(e) {
        var t = this.activeItems.indexOf(e);
        this.activeItems.splice(t, 1), _(e, "active");
      }
    }, {
      key: "clearActiveItems",
      value: function clearActiveItems() {
        _(this.activeItems, "active"), this.activeItems = [];
      }
    }, {
      key: "setActiveOption",
      value: function setActiveOption(e) {
        e !== this.activeOption && (this.clearActiveOption(), e && (this.activeOption = e, L(this.control_input, {
          "aria-activedescendant": e.getAttribute("id")
        }), L(e, {
          "aria-selected": "true"
        }), A(e, "active"), this.scrollToOption(e)));
      }
    }, {
      key: "scrollToOption",
      value: function scrollToOption(e, t) {
        if (!e) return;
        var i = this.dropdown_content,
            s = i.clientHeight,
            n = i.scrollTop || 0,
            o = e.offsetHeight,
            r = e.getBoundingClientRect().top - i.getBoundingClientRect().top + n;
        r + o > s + n ? this.scroll(r - s + o, t) : r < n && this.scroll(r, t);
      }
    }, {
      key: "scroll",
      value: function scroll(e, t) {
        var i = this.dropdown_content;
        t && (i.style.scrollBehavior = t), i.scrollTop = e, i.style.scrollBehavior = "";
      }
    }, {
      key: "clearActiveOption",
      value: function clearActiveOption() {
        this.activeOption && (_(this.activeOption, "active"), L(this.activeOption, {
          "aria-selected": null
        })), this.activeOption = null, L(this.control_input, {
          "aria-activedescendant": null
        });
      }
    }, {
      key: "selectAll",
      value: function selectAll() {
        "single" !== this.settings.mode && (this.activeItems = this.controlChildren(), this.activeItems.length && (A(this.activeItems, "active"), this.hideInput(), this.close()), this.focus());
      }
    }, {
      key: "inputState",
      value: function inputState() {
        var e = this;
        e.settings.controlInput || (e.activeItems.length > 0 || !e.isFocused && this.settings.hidePlaceholder && e.items.length > 0 ? (e.setTextboxValue(), e.isInputHidden = !0, A(e.wrapper, "input-hidden")) : (e.isInputHidden = !1, _(e.wrapper, "input-hidden")));
      }
    }, {
      key: "hideInput",
      value: function hideInput() {
        this.inputState();
      }
    }, {
      key: "showInput",
      value: function showInput() {
        this.inputState();
      }
    }, {
      key: "inputValue",
      value: function inputValue() {
        return this.control_input.value.trim();
      }
    }, {
      key: "focus",
      value: function focus() {
        var e = this;
        e.isDisabled || (e.ignoreFocus = !0, e.control_input.focus(), setTimeout(function () {
          e.ignoreFocus = !1, e.onFocus();
        }, 0));
      }
    }, {
      key: "blur",
      value: function blur() {
        this.control_input.blur(), this.onBlur();
      }
    }, {
      key: "getScoreFunction",
      value: function getScoreFunction(e) {
        return this.sifter.getScoreFunction(e, this.getSearchOptions());
      }
    }, {
      key: "getSearchOptions",
      value: function getSearchOptions() {
        var e = this.settings,
            t = e.sortField;
        return "string" == typeof e.sortField && (t = [{
          field: e.sortField
        }]), {
          fields: e.searchField,
          conjunction: e.searchConjunction,
          sort: t,
          nesting: e.nesting
        };
      }
    }, {
      key: "search",
      value: function search(e) {
        var t,
            i,
            s,
            n = this,
            o = this.getSearchOptions();
        if (n.settings.score && "function" != typeof (s = n.settings.score.call(n, e))) throw new Error('Tom Select "score" setting must be a function that returns a function');
        if (e !== n.lastQuery ? (n.lastQuery = e, i = n.sifter.search(e, Object.assign(o, {
          score: s
        })), n.currentResults = i) : i = Object.assign({}, n.currentResults), n.settings.hideSelected) for (t = i.items.length - 1; t >= 0; t--) {
          var _e11 = j(i.items[t].id);

          _e11 && -1 !== n.items.indexOf(_e11) && i.items.splice(t, 1);
        }
        return i;
      }
    }, {
      key: "refreshOptions",
      value: function refreshOptions() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
        var t, i, s, n, o, r, l, a, c, d, p;
        var u = {},
            h = [];
        var g,
            m = this,
            f = m.inputValue(),
            v = m.search(f),
            y = m.activeOption,
            O = m.settings.shouldOpen || !1,
            b = m.dropdown_content;

        for (y && (c = y.dataset.value, d = y.closest("[data-group]")), n = v.items.length, "number" == typeof m.settings.maxOptions && (n = Math.min(n, m.settings.maxOptions)), n > 0 && (O = !0), t = 0; t < n; t++) {
          var _e12 = v.items[t].id,
              _n = m.options[_e12],
              _l = m.getOption(_e12, !0);

          for (m.settings.hideSelected || _l.classList.toggle("selected", m.items.includes(_e12)), o = _n[m.settings.optgroupField] || "", i = 0, s = (r = Array.isArray(o) ? o : [o]) && r.length; i < s; i++) {
            o = r[i], m.optgroups.hasOwnProperty(o) || (o = ""), u.hasOwnProperty(o) || (u[o] = document.createDocumentFragment(), h.push(o)), i > 0 && (_l = _l.cloneNode(!0), L(_l, {
              id: _n.$id + "-clone-" + i,
              "aria-selected": null
            }), _l.classList.add("ts-cloned"), _(_l, "active")), c == _e12 && d && d.dataset.group === o && (y = _l), u[o].appendChild(_l);
          }
        }

        for (var _i7 = 0, _arr2 = (this.settings.lockOptgroupOrder && h.sort(function (e, t) {
          return (m.optgroups[e] && m.optgroups[e].$order || 0) - (m.optgroups[t] && m.optgroups[t].$order || 0);
        }), l = document.createDocumentFragment(), h); _i7 < _arr2.length; _i7++) {
          o = _arr2[_i7];

          if (m.optgroups.hasOwnProperty(o) && u[o].children.length) {
            var _e13 = document.createDocumentFragment(),
                _t13 = m.render("optgroup_header", m.optgroups[o]);

            Q(_e13, _t13), Q(_e13, u[o]);

            var _i8 = m.render("optgroup", {
              group: m.optgroups[o],
              options: _e13
            });

            Q(l, _i8);
          } else Q(l, u[o]);
        }

        if (b.innerHTML = "", Q(b, l), m.settings.highlight && (g = b.querySelectorAll("span.highlight"), Array.prototype.forEach.call(g, function (e) {
          var t = e.parentNode;
          t.replaceChild(e.firstChild, e), t.normalize();
        }), v.query.length && v.tokens.length)) {
          var _iterator10 = _createForOfIteratorHelper(v.tokens),
              _step10;

          try {
            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
              var _e14 = _step10.value;
              T(b, _e14.regex);
            }
          } catch (err) {
            _iterator10.e(err);
          } finally {
            _iterator10.f();
          }
        }

        var w = function w(e) {
          var t = m.render(e, {
            input: f
          });
          return t && (O = !0, b.insertBefore(t, b.firstChild)), t;
        };

        if (m.settings.shouldLoad.call(m, f) ? m.loading ? w("loading") : 0 === v.items.length && w("no_results") : w("not_loading"), (a = m.canCreate(f)) && (p = w("option_create")), m.hasOptions = v.items.length > 0 || a, O) {
          if (v.items.length > 0) {
            if (!b.contains(y) && "single" === m.settings.mode && m.items.length && (y = m.getOption(m.items[0])), !b.contains(y)) {
              var _e15 = 0;
              p && !m.settings.addPrecedence && (_e15 = 1), y = m.selectable()[_e15];
            }
          } else p && (y = p);

          e && !m.isOpen && (m.open(), m.scrollToOption(y, "auto")), m.setActiveOption(y);
        } else m.clearActiveOption(), e && m.isOpen && m.close(!1);
      }
    }, {
      key: "selectable",
      value: function selectable() {
        return this.dropdown_content.querySelectorAll("[data-selectable]");
      }
    }, {
      key: "addOption",
      value: function addOption(e) {
        var t,
            i = this;

        if (Array.isArray(e)) {
          var _iterator11 = _createForOfIteratorHelper(e),
              _step11;

          try {
            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
              var _t14 = _step11.value;
              i.addOption(_t14);
            }
          } catch (err) {
            _iterator11.e(err);
          } finally {
            _iterator11.f();
          }
        } else (t = i.registerOption(e)) && (i.userOptions[t] = !0, i.lastQuery = null, i.trigger("option_add", t, e));
      }
    }, {
      key: "registerOption",
      value: function registerOption(e) {
        var t = j(e[this.settings.valueField]);
        return null !== t && !this.options.hasOwnProperty(t) && (e.$order = e.$order || ++this.order, e.$id = this.inputId + "-opt-" + e.$order, this.options[t] = e, t);
      }
    }, {
      key: "registerOptionGroup",
      value: function registerOptionGroup(e) {
        var t = j(e[this.settings.optgroupValueField]);
        return null !== t && (e.$order = e.$order || ++this.order, this.optgroups[t] = e, t);
      }
    }, {
      key: "addOptionGroup",
      value: function addOptionGroup(e, t) {
        var i;
        t[this.settings.optgroupValueField] = e, (i = this.registerOptionGroup(t)) && this.trigger("optgroup_add", i, t);
      }
    }, {
      key: "removeOptionGroup",
      value: function removeOptionGroup(e) {
        this.optgroups.hasOwnProperty(e) && (delete this.optgroups[e], this.clearCache(), this.trigger("optgroup_remove", e));
      }
    }, {
      key: "clearOptionGroups",
      value: function clearOptionGroups() {
        this.optgroups = {}, this.clearCache(), this.trigger("optgroup_clear");
      }
    }, {
      key: "updateOption",
      value: function updateOption(e, t) {
        var i = this;
        var s, n;
        var o = j(e);
        if (null === o) return;
        var r = j(t[i.settings.valueField]),
            l = i.getOption(o),
            a = i.getItem(o);

        if (i.options.hasOwnProperty(o)) {
          if ("string" != typeof r) throw new Error("Value must be set in option data");

          if (t.$order = t.$order || i.options[o].$order, delete i.options[o], i.uncacheValue(r), i.uncacheValue(o, !1), i.options[r] = t, l) {
            if (i.dropdown_content.contains(l)) {
              var _e16 = i._render("option", t);

              E(l, _e16), i.activeOption === l && i.setActiveOption(_e16);
            }

            l.remove();
          }

          a && (-1 !== (n = i.items.indexOf(o)) && i.items.splice(n, 1, r), s = i._render("item", t), a.classList.contains("active") && A(s, "active"), E(a, s)), i.lastQuery = null;
        }
      }
    }, {
      key: "removeOption",
      value: function removeOption(e, t) {
        var i = this;
        e = $(e), i.uncacheValue(e), delete i.userOptions[e], delete i.options[e], i.lastQuery = null, i.trigger("option_remove", e), i.removeItem(e, t);
      }
    }, {
      key: "clearOptions",
      value: function clearOptions() {
        this.loadedSearches = {}, this.userOptions = {}, this.clearCache();
        var e = {};

        for (var _t15 in this.options) {
          this.options.hasOwnProperty(_t15) && this.items.indexOf(_t15) >= 0 && (e[_t15] = this.options[_t15]);
        }

        this.options = this.sifter.items = e, this.lastQuery = null, this.trigger("option_clear");
      }
    }, {
      key: "uncacheValue",
      value: function uncacheValue(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
        var i = this,
            s = i.renderCache.item,
            n = i.renderCache.option;

        if (s && delete s[e], n && delete n[e], t) {
          var _t16 = i.getOption(e);

          _t16 && _t16.remove();
        }
      }
    }, {
      key: "getOption",
      value: function getOption(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        var i = j(e),
            s = this.rendered("option", i);
        return !s && t && null !== i && (s = this._render("option", this.options[i])), s;
      }
    }, {
      key: "getAdjacent",
      value: function getAdjacent(e, t) {
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "option";
        var s;
        if (!e) return null;
        s = "item" == i ? this.controlChildren() : this.dropdown_content.querySelectorAll("[data-selectable]");

        for (var _i9 = 0; _i9 < s.length; _i9++) {
          if (s[_i9] == e) return t > 0 ? s[_i9 + 1] : s[_i9 - 1];
        }

        return null;
      }
    }, {
      key: "getItem",
      value: function getItem(e) {
        if ("object" == _typeof(e)) return e;
        var t = j(e);
        return null !== t ? this.control.querySelector("[data-value=\"".concat(B(t), "\"]")) : null;
      }
    }, {
      key: "addItems",
      value: function addItems(e, t) {
        var i = this,
            s = Array.isArray(e) ? e : [e];

        for (var _e17 = 0, _n2 = (s = s.filter(function (e) {
          return -1 === i.items.indexOf(e);
        })).length; _e17 < _n2; _e17++) {
          i.isPending = _e17 < _n2 - 1, i.addItem(s[_e17], t);
        }
      }
    }, {
      key: "addItem",
      value: function addItem(e, t) {
        var _this6 = this;

        R(this, t ? [] : ["change"], function () {
          var i, s;
          var n = _this6,
              o = n.settings.mode,
              r = j(e);

          if ((!r || -1 === n.items.indexOf(r) || ("single" === o && n.close(), "single" !== o && n.settings.duplicates)) && null !== r && n.options.hasOwnProperty(r) && ("single" === o && n.clear(t), "multi" !== o || !n.isFull())) {
            if (i = n._render("item", n.options[r]), n.control.contains(i) && (i = i.cloneNode(!0)), s = n.isFull(), n.items.splice(n.caretPos, 0, r), n.insertAtCaret(i), n.isSetup) {
              var _e18 = n.selectable();

              if (!n.isPending && n.settings.hideSelected) {
                var _e19 = n.getOption(r),
                    _t17 = n.getAdjacent(_e19, 1);

                _t17 && n.setActiveOption(_t17);
              }

              n.isPending || n.refreshOptions(n.isFocused && "single" !== o), !_e18.length || n.isFull() ? n.close() : n.isPending || n.positionDropdown(), n.trigger("item_add", r, i), n.isPending || n.updateOriginalInput({
                silent: t
              });
            }

            (!n.isPending || !s && n.isFull()) && n.refreshState();
          }
        });
      }
    }, {
      key: "removeItem",
      value: function removeItem() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var t = arguments.length > 1 ? arguments[1] : undefined;
        var i = this;
        if (!(e = i.getItem(e))) return;
        var s, n;
        var o = e.dataset.value;
        s = P(e), e.remove(), e.classList.contains("active") && (n = i.activeItems.indexOf(e), i.activeItems.splice(n, 1), _(e, "active")), i.items.splice(s, 1), i.lastQuery = null, !i.settings.persist && i.userOptions.hasOwnProperty(o) && i.removeOption(o, t), s < i.caretPos && i.setCaret(i.caretPos - 1), i.updateOriginalInput({
          silent: t
        }), i.refreshState(), i.positionDropdown(), i.trigger("item_remove", o, e);
      }
    }, {
      key: "createItem",
      value: function createItem() {
        var _ref2;

        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
        var s,
            n = this,
            o = n.caretPos;
        if (e = e || n.inputValue(), !n.canCreate(e)) return i(), !1;
        n.lock();

        var r = !1,
            l = function l(e) {
          if (n.unlock(), !e || "object" != _typeof(e)) return i();
          var s = j(e[n.settings.valueField]);
          if ("string" != typeof s) return i();
          n.setTextboxValue(), n.addOption(e), n.setCaret(o), n.addItem(s), n.refreshOptions(t && "single" !== n.settings.mode), i(e), r = !0;
        };

        return s = "function" == typeof n.settings.create ? n.settings.create.call(this, e, l) : (_ref2 = {}, _defineProperty(_ref2, n.settings.labelField, e), _defineProperty(_ref2, n.settings.valueField, e), _ref2), r || l(s), !0;
      }
    }, {
      key: "refreshItems",
      value: function refreshItems() {
        var e = this;
        e.lastQuery = null, e.isSetup && e.addItems(e.items), e.updateOriginalInput(), e.refreshState();
      }
    }, {
      key: "refreshState",
      value: function refreshState() {
        var e = this;
        e.refreshValidityState();
        var t = e.isFull(),
            i = e.isLocked;
        e.wrapper.classList.toggle("rtl", e.rtl);
        var s,
            n = e.control.classList;
        n.toggle("focus", e.isFocused), n.toggle("disabled", e.isDisabled), n.toggle("required", e.isRequired), n.toggle("invalid", e.isInvalid), n.toggle("locked", i), n.toggle("full", t), n.toggle("not-full", !t), n.toggle("input-active", e.isFocused && !e.isInputHidden), n.toggle("dropdown-active", e.isOpen), n.toggle("has-options", (s = e.options, 0 === Object.keys(s).length)), n.toggle("has-items", e.items.length > 0);
      }
    }, {
      key: "refreshValidityState",
      value: function refreshValidityState() {
        var e = this;

        if (e.input.checkValidity) {
          this.isRequired && (e.input.required = !0);
          var t = !e.input.checkValidity();
          e.isInvalid = t, e.control_input.required = t, this.isRequired && (e.input.required = !t);
        }
      }
    }, {
      key: "isFull",
      value: function isFull() {
        return null !== this.settings.maxItems && this.items.length >= this.settings.maxItems;
      }
    }, {
      key: "updateOriginalInput",
      value: function updateOriginalInput() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var t = this;
        var i, s, n, o;

        if (t.is_select_tag) {
          var _r = function _r(i, s, n) {
            return i || (i = w('<option value="' + D(s) + '">' + D(n) + "</option>")), t.input.prepend(i), _e20.push(i), L(i, {
              selected: "true"
            }), i.selected = !0, i;
          };

          var _e20 = [];
          if (t.input.querySelectorAll("option[selected]").forEach(function (e) {
            L(e, {
              selected: null
            }), e.selected = !1;
          }), 0 != t.items.length || "single" != t.settings.mode || t.isRequired) for (i = t.items.length - 1; i >= 0; i--) {
            if (s = t.items[i], o = (n = t.options[s])[t.settings.labelField] || "", _e20.includes(n.$option)) {
              _r(t.input.querySelector("option[value=\"".concat(B(s), "\"]:not([selected])")), s, o);
            } else n.$option = _r(n.$option, s, o);
          } else _r(t.input.querySelector('option[value=""]'), "", "");
        } else t.input.value = t.getValue();

        t.isSetup && (e.silent || t.trigger("change", t.getValue()));
      }
    }, {
      key: "open",
      value: function open() {
        var e = this;
        e.isLocked || e.isOpen || "multi" === e.settings.mode && e.isFull() || (e.isOpen = !0, L(e.control_input, {
          "aria-expanded": "true"
        }), e.refreshState(), C(e.dropdown, {
          visibility: "hidden",
          display: "block"
        }), e.positionDropdown(), C(e.dropdown, {
          visibility: "visible",
          display: "block"
        }), e.focus(), e.trigger("dropdown_open", e.dropdown));
      }
    }, {
      key: "close",
      value: function close() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
        var t = this,
            i = t.isOpen;
        e && (t.setTextboxValue(), "single" === t.settings.mode && t.items.length && (t.hideInput(), t.tab_key || t.blur())), t.isOpen = !1, L(t.control_input, {
          "aria-expanded": "false"
        }), C(t.dropdown, {
          display: "none"
        }), t.settings.hideSelected && t.clearActiveOption(), t.refreshState(), i && t.trigger("dropdown_close", t.dropdown);
      }
    }, {
      key: "positionDropdown",
      value: function positionDropdown() {
        if ("body" === this.settings.dropdownParent) {
          var e = this.control,
              t = e.getBoundingClientRect(),
              i = e.offsetHeight + t.top + window.scrollY,
              s = t.left + window.scrollX;
          C(this.dropdown, {
            width: t.width + "px",
            top: i + "px",
            left: s + "px"
          });
        }
      }
    }, {
      key: "clear",
      value: function clear(e) {
        var t = this;

        if (t.items.length) {
          var i = t.controlChildren();

          var _iterator12 = _createForOfIteratorHelper(i),
              _step12;

          try {
            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
              var _e21 = _step12.value;
              t.removeItem(_e21, !0);
            }
          } catch (err) {
            _iterator12.e(err);
          } finally {
            _iterator12.f();
          }

          t.showInput(), e || t.updateOriginalInput(), t.trigger("clear");
        }
      }
    }, {
      key: "insertAtCaret",
      value: function insertAtCaret(e) {
        var t = this,
            i = Math.min(t.caretPos, t.items.length),
            s = t.control;
        0 === i ? s.insertBefore(e, s.firstChild) : s.insertBefore(e, s.children[i]), t.setCaret(i + 1);
      }
    }, {
      key: "deleteSelection",
      value: function deleteSelection(e) {
        var t,
            i,
            s,
            n,
            o,
            r = this;
        t = e && 8 === e.keyCode ? -1 : 1, i = {
          start: (o = r.control_input).selectionStart || 0,
          length: (o.selectionEnd || 0) - (o.selectionStart || 0)
        };
        var l = [];

        if (r.activeItems.length) {
          n = k(r.activeItems, t), s = P(n), t > 0 && s++;

          var _iterator13 = _createForOfIteratorHelper(r.activeItems),
              _step13;

          try {
            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
              var _e22 = _step13.value;
              l.push(_e22);
            }
          } catch (err) {
            _iterator13.e(err);
          } finally {
            _iterator13.f();
          }
        } else if ((r.isFocused || "single" === r.settings.mode) && r.items.length) {
          var _e23 = r.controlChildren();

          t < 0 && 0 === i.start && 0 === i.length ? l.push(_e23[r.caretPos - 1]) : t > 0 && i.start === r.inputValue().length && l.push(_e23[r.caretPos]);
        }

        var a = l.map(function (e) {
          return e.dataset.value;
        });
        if (!a.length || "function" == typeof r.settings.onDelete && !1 === r.settings.onDelete.call(r, a, e)) return !1;

        for (H(e, !0), void 0 !== s && r.setCaret(s); l.length;) {
          r.removeItem(l.pop());
        }

        return r.showInput(), r.positionDropdown(), r.refreshOptions(!1), !0;
      }
    }, {
      key: "advanceSelection",
      value: function advanceSelection(e, t) {
        var i,
            s,
            n,
            o = this;
        o.rtl && (e *= -1), o.inputValue().length || (K(q, t) || K("shiftKey", t) ? (n = (s = o.getLastActive(e)) ? s.classList.contains("active") ? o.getAdjacent(s, e, "item") : s : e > 0 ? o.control_input.nextElementSibling : o.control_input.previousElementSibling) && (n.classList.contains("active") && o.removeActiveItem(s), o.setActiveItemClass(n)) : o.isFocused && !o.activeItems.length ? o.setCaret(o.caretPos + e) : (s = o.getLastActive(e)) && (i = P(s), o.setCaret(e > 0 ? i + 1 : i), o.setActiveItem()));
      }
    }, {
      key: "getLastActive",
      value: function getLastActive(e) {
        var t = this.control.querySelector(".last-active");
        if (t) return t;
        var i = this.control.querySelectorAll(".active");
        return i ? k(i, e) : void 0;
      }
    }, {
      key: "setCaret",
      value: function setCaret(e) {
        var t = this;
        "single" === t.settings.mode || t.settings.controlInput ? e = t.items.length : (e = Math.max(0, Math.min(t.items.length, e))) == t.caretPos || t.isPending || t.controlChildren().forEach(function (i, s) {
          s < e ? t.control_input.insertAdjacentElement("beforebegin", i) : t.control.appendChild(i);
        }), t.caretPos = e;
      }
    }, {
      key: "controlChildren",
      value: function controlChildren() {
        return Array.from(this.control.getElementsByClassName(this.settings.itemClass));
      }
    }, {
      key: "lock",
      value: function lock() {
        this.close(), this.isLocked = !0, this.refreshState();
      }
    }, {
      key: "unlock",
      value: function unlock() {
        this.isLocked = !1, this.refreshState();
      }
    }, {
      key: "disable",
      value: function disable() {
        var e = this;
        e.input.disabled = !0, e.control_input.disabled = !0, e.control_input.tabIndex = -1, e.isDisabled = !0, e.lock();
      }
    }, {
      key: "enable",
      value: function enable() {
        var e = this;
        e.input.disabled = !1, e.control_input.disabled = !1, e.control_input.tabIndex = e.tabIndex, e.isDisabled = !1, e.unlock();
      }
    }, {
      key: "destroy",
      value: function destroy() {
        var e = this,
            t = e.revertSettings;
        e.trigger("destroy"), e.off(), e.wrapper.remove(), e.dropdown.remove(), e.input.innerHTML = t.innerHTML, e.input.tabIndex = t.tabIndex, _(e.input, "tomselected"), L(e.input, {
          hidden: null
        }), e.input.required = this.isRequired, e._destroy(), delete e.input.tomselect;
      }
    }, {
      key: "render",
      value: function render(e, t) {
        return "function" != typeof this.settings.render[e] ? null : this._render(e, t);
      }
    }, {
      key: "_render",
      value: function _render(e, t) {
        var i,
            s,
            n = "";
        var o = this;
        return ("option" === e || "item" === e) && (n = $(t[o.settings.valueField]), s = o.rendered(e, n)) || null == (s = o.settings.render[e].call(this, t, D)) || (s = w(s), "option" === e || "option_create" === e ? t[o.settings.disabledField] ? L(s, {
          "aria-disabled": "true"
        }) : L(s, {
          "data-selectable": ""
        }) : "optgroup" === e && (i = t.group[o.settings.optgroupValueField], L(s, {
          "data-group": i
        }), t.group[o.settings.disabledField] && L(s, {
          "data-disabled": ""
        })), "option" !== e && "item" !== e || (L(s, {
          "data-value": n
        }), "item" === e ? A(s, o.settings.itemClass) : (A(s, o.settings.optionClass), L(s, {
          role: "option",
          id: t.$id
        })), o.renderCache[e][n] = s)), s;
      }
    }, {
      key: "rendered",
      value: function rendered(e, t) {
        return null !== t && this.renderCache[e].hasOwnProperty(t) ? this.renderCache[e][t] : null;
      }
    }, {
      key: "clearCache",
      value: function clearCache(e) {
        var t = this;

        for (var _e24 in t.options) {
          var _i10 = t.getOption(_e24);

          _i10 && _i10.remove();
        }

        void 0 === e ? t.renderCache = {
          item: {},
          option: {}
        } : t.renderCache[e] = {};
      }
    }, {
      key: "canCreate",
      value: function canCreate(e) {
        return this.settings.create && e.length > 0 && this.settings.createFilter.call(this, e);
      }
    }, {
      key: "hook",
      value: function hook(e, t, i) {
        var s = this,
            n = s[t];

        s[t] = function () {
          var t, o;
          return "after" === e && (t = n.apply(s, arguments)), o = i.apply(s, arguments), "instead" === e ? o : ("before" === e && (t = n.apply(s, arguments)), t);
        };
      }
    }]);

    return U;
  }(function (e) {
    return e.plugins = {}, /*#__PURE__*/function (_e25) {
      _inherits(_class, _e25);

      var _super2 = _createSuper(_class);

      function _class() {
        var _this7;

        _classCallCheck(this, _class);

        for (var _len4 = arguments.length, e = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          e[_key4] = arguments[_key4];
        }

        _this7 = _super2.call.apply(_super2, [this].concat(e)), _this7.plugins = {
          names: [],
          settings: {},
          requested: {},
          loaded: {}
        };
        return _this7;
      }

      _createClass(_class, [{
        key: "initializePlugins",
        value: function initializePlugins(e) {
          var t, i;
          var s = this,
              n = [];
          if (Array.isArray(e)) e.forEach(function (e) {
            "string" == typeof e ? n.push(e) : (s.plugins.settings[e.name] = e.options, n.push(e.name));
          });else if (e) for (t in e) {
            e.hasOwnProperty(t) && (s.plugins.settings[t] = e[t], n.push(t));
          }

          for (; i = n.shift();) {
            s.require(i);
          }
        }
      }, {
        key: "loadPlugin",
        value: function loadPlugin(t) {
          var i = this,
              s = i.plugins,
              n = e.plugins[t];
          if (!e.plugins.hasOwnProperty(t)) throw new Error('Unable to find "' + t + '" plugin');
          s.requested[t] = !0, s.loaded[t] = n.fn.apply(i, [i.plugins.settings[t] || {}]), s.names.push(t);
        }
      }, {
        key: "require",
        value: function require(e) {
          var t = this,
              i = t.plugins;

          if (!t.plugins.loaded.hasOwnProperty(e)) {
            if (i.requested[e]) throw new Error('Plugin has circular dependency ("' + e + '")');
            t.loadPlugin(e);
          }

          return i.loaded[e];
        }
      }], [{
        key: "define",
        value: function define(t, i) {
          e.plugins[t] = {
            name: t,
            fn: i
          };
        }
      }]);

      return _class;
    }(e);
  }(t));

  return U;
});

var tomSelect = function tomSelect(e, t) {
  return new TomSelect(e, t);
};

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./resources/libs/tom-select/dist/js/tom-select.base.min.js"));
/******/ }
]);